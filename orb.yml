version: 2.1

description: This Orb is to make the integration between k8s and circleci easier.

orbs:
  gcp-cli: circleci/gcp-cli@1.3.0
  kubernetes: circleci/kubernetes@0.2.0

executors:
  default:
    description: Defaults to cloud-sdk
    docker:
      - image: google/cloud-sdk:latest

commands:
  build-and-push-image:
    description: build and push image to GCR
    parameters:
      gcloud-service-key:
        description: The gcloud service key
        type: env_var_name
        default: GCLOUD_SERVICE_KEY
      google-project-id:
        description: Environment variable name for the Google project ID to connect with via the gcloud CLI
        type: env_var_name
        default: GOOGLE_PROJECT_ID
      google-compute-zone:
        description: The Google compute zone to connect with via the gcloud CLI
        type: env_var_name
        default: GOOGLE_COMPUTE_ZONE
      gcr-domain:
        description: The GCR registry URL from ['', us, eu, asia].gcr.io
        type: env_var_name
        default: GCR_DOMAIN
      image-tag:
        description: The tag name of the docker image
        type: env_var_name
        default: CIRCLE_BRANCH
      image-name:
        description: The name of the docker image
        type: string
      dockerfile-path:
        description: The relative path to the Dockerfile to use when building image
        type: string
        default: "."
    steps:
      - gcp-cli/install
      - gcp-cli/initialize:
          google-project-id: <<parameters.google-project-id>>
          google-compute-zone: <<parameters.google-compute-zone>>
      - run:
          name: Set up GCR authentication
          command: |
            gcloud alpha auth configure-docker --quiet --project $<<parameters.google-project-id>>
      - run:
          name: Build docker image
          command: |
            docker build -t $<<parameters.gcr-domain>>/$<<parameters.google-project-id>>/<<parameters.image-name>>:$<<parameters.image-tag>> -f <<parameters.dockerfile-path>> .

      - run:
          name: Push image to GCR
          command: |
            docker push $<<parameters.gcr-domain>>/$<<parameters.google-project-id>>/<<parameters.image-name>>:$<<parameters.image-tag>>

  trigger-deploy:
    description: Deploy to Kubernetes
    parameters:
      namespace:
        description: kubernetes namespace to deploy to
        type: string
        default: default
      deployment:
        description: kubernetes deployment name
        type: string
      image-name:
        description: the name of the image to deploy
        type: string
      image-tag:
        description: the tag name of the docker image
        type: env_var_name
        default: CIRCLE_BRANCH
      kubeconfig-url:
        description: where to download kubeconfig template
        type: string
        default: https://raw.githubusercontent.com/civey/k8s-gcr-orb/master/kubeconfig
    steps:
      - kubernetes/install
      - run:
          name: Populate kubeconfig
          command: |
            if [ "$CIRCLE_BRANCH" == "master" ]; then
              K8S_CA=$K8S_CA_PRODUCTION
              K8S_SERVER=$K8S_SERVER_PRODUCTION
              K8S_TOKEN=$K8S_TOKEN_PRODUCTION
            else
              K8S_CA=$K8S_CA_STAGING
              K8S_SERVER=$K8S_SERVER_STAGING
              K8S_TOKEN=$K8S_TOKEN_STAGING
            fi

            [ -z "$K8S_CA" ] && echo '$K8S_CA is not set!' && exit 2

            mkdir -p $HOME/.kube

            echo -e $K8S_CA > $HOME/.kube/ca.crt
            curl -fLSs <<parameters.kubeconfig-url>> \
              | sed -e "s#<K8S_SERVER>#$K8S_SERVER#" \
                    -e "s#<K8S_TOKEN>#$K8S_TOKEN#" \
                    -e "s#<HOME>#$HOME#" \
              > $HOME/.kube/config
      - run:
          name: Set image to trigger a deployment
          command: |
            DIGEST=$(gcloud container images list-tags $GCR_DOMAIN/$GOOGLE_PROJECT_ID/<<parameters.image-name>> \
                       --filter=TAGS:$<<parameters.image-tag>> --limit=1 --format='get(digest)')
            kubectl -n <<parameters.namespace>> \
              set image deployments/<<parameters.deployment>> \
              <<parameters.deployment>>=$GCR_DOMAIN/$GOOGLE_PROJECT_ID/<<parameters.image-name>>@$DIGEST

jobs:
  build-and-deploy:
    description: build and push image to GCR and then trigger a deployment on k8s
    executor: default
    parameters:
      gcloud-service-key:
        description: The gcloud service key
        type: env_var_name
        default: GCLOUD_SERVICE_KEY
      google-project-id:
        description: Environment variable name for the Google project ID to connect with via the gcloud CLI
        type: env_var_name
        default: GOOGLE_PROJECT_ID
      google-compute-zone:
        description: The Google compute zone to connect with via the gcloud CLI
        type: env_var_name
        default: GOOGLE_COMPUTE_ZONE
      gcr-domain:
        description: The GCR registry URL from ['', us, eu, asia].gcr.io
        type: env_var_name
        default: GCR_DOMAIN
      image-tag:
        description: The tag name of the docker image
        type: env_var_name
        default: CIRCLE_BRANCH
      image-name:
        description: The name of the docker image
        type: string
        default: latest
      dockerfile-path:
        description: The relative path to the Dockerfile to use when building image
        type: string
        default: "."
      namespace:
        description: kubernetes namespace to deploy to
        type: string
        default: default
      deployment:
        description: kubernetes deployment name
        type: string
      kubeconfig-url:
        description: where to download kubeconfig template
        type: string
        default: https://raw.githubusercontent.com/civey/k8s-gcr-orb/master/kubeconfig
    steps:
      - checkout
      - build-and-push-image:
          image-name: "<<parameters.image-name>>"
      - trigger-deploy:
          namespace: "<<parameters.namespace>>"
          image-name: "<<parameters.image-name>>"
          deployment: "<<parameters.deployment>>"
